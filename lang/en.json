{
  "healthEstimate": {
    "core": {
      "custom": {
        "FractionHP": {
          "name": "Hit Points Attribute",
          "hint": "Your system isn't officially supported, so it might be using a different attribute the standard. Only change this if the estimate isn't showing and you know what you're doing."
        },
        "FractionMath": {
          "name": "Fraction Equation",
          "hint": "Your system isn't officially supported, so choose the equation used to estimate the health fraction.",
          "choices": {
            "0": "(Current HP)/(Max HP)",
            "1": "(Max HP - Current HP)/(Max HP)"
          }
        }
      },
      "isNow": "is now",
      "showDescription": {
        "name": "Show Estimates: Users",
        "hint": "Show estimates to the following users.",
        "choices": {
          "all": "All",
          "GM": "Gamemasters",
          "Players": "Players",
          "NPC": "Non-Player Characters",
          "PC": "Player Characters"
        }
      },
      "showDescriptionTokenType": {
        "name": "Show Estimates: Tokens",
        "hint": "Show estimates of the following tokens."
      },
      "stateNames": {
        "name": "Stages",
        "hint": "An array of descriptions shown to players, arranged from worst to best possible health.\nThe amount of possible descriptions is not limited, the module will adjust the health percentage to show them proportionally to the amount.\nIf there is a need for one description to cover a higher range of health than others simply copy it several times.",
        "default": [
          "Unconscious",
          "Near Death",
          "Badly Injured",
          "Injured",
          "Barely Injured",
          "Uninjured"
        ]
      },
      "deathState": {
        "name": "Death State on Condition",
        "hint": "Show token as dead when it's been affected by any condition that uses the icon set on the Death Marker setting. Works independently from the macro."
      },
      "deathStateName": {
        "name": "Death State Name",
        "hint": "The description shown to players when the token is dead. Compendium tab has a macro for marking a token (or several) as dead.",
        "default": "Dead"
      },
      "deathMarker": {
        "name": "Death Marker",
        "hint": "Path to the condition icon that marks the dead tokens.\nTo get a custom icon's path, select a token marked with it, open the console and enter \"canvas.tokens.controlled[0].data.overlayEffect\""
      },
      "NPCsJustDie": {
        "name": "NPCs die immediately",
        "hint": "The last stage of NPCs is replaced by the Death State Name."
      },
      "perfectionism": {
        "name": "Perfectionism",
        "hint": "Only show the best possible description when the target is in perfect state - not a single damage taken."
      },
      "outputChat": {
        "name": "Output Estimate to Chat",
        "hint": "Output any estimate changes to chat. Characters flagged with the Hide Estimate macro will be shown as \"Unknown Entity\"."
      },
      "addTemp": {
        "name": "Add Temporary Health",
        "hint": "Include temporary health points in calculating what description to show.\nE.g. with the setting turned on the token receiving temp HP will look \"healthier\" unless it's already at max health."
      },
      "breakOnZeroMaxHP": {
        "name": "Hide on tokens with 0 max HP",
        "hint": "Useful for objects with tokens"
      },
      "menuSettings": {
        "fontSize": {
          "name": "Font Size",
          "hint": "Accepts any valid property for CSS font-size"
        },
        "useColor": {
          "name": "Use Color",
          "hint": "This won't affect the settings window, but with checkmark off the descriptions will be shown in black and white."
        },
        "smoothGradient": {
          "name": "Smooth Gradient",
          "hint": "With this setting off the color will only change when the next description is reached, with it on it will reflect the health percentage."
        },
        "deadColor": {
          "name": "Color of dead tokens"
        },
        "outline": {
          "name": "Outline",
          "darken": "Darken",
          "brighten": "Brighten"
        },
        "position": {
          "name": "Position",
          "top": "Top",
          "middle": "Middle",
          "bottom": "Bottom"
        },
        "positionAdjustment": {
          "name": "Position Adjustment",
          "hint": "Position is set relative to the frame. The number lets you tweak the position relative to its normal place. Positive numbers push it lower, negative â€“ higher. The default value of -1 sets it to \"1 line above initial position\"."
        }
      }
    },
    "dnd5e": {
      "vehicleNames": {
        "hint": "Descriptions shown for vehicles if \"Use Vehicle Threshold\" is off",
        "default": [
          "Wrecked",
          "Broken",
          "Battered",
          "Scratched",
          "Pristine"
        ]
      }
    },
    "PF1": {
      "addNonlethal": {
        "name": "Use Nonlethal Damage",
        "hint": "If enabled nonlethal damage will be substracted from current health for estimation."
      },
      "showExtra": {
        "name": "Disabled & Dying",
        "hint": "Show \"Disabled\" and \"Dying\" descriptions"
      },
      "disabledName": {
        "name": "Disabled",
        "hint": "Description to show when token is precisely at 0 HP or has more nonlethal damage than HP remaining",
        "default": "Disabled"
      },
      "dyingName": {
        "name": "Dying",
        "hint": "Description to show when token is below 0 HP",
        "default": "Dying"
      }
    },
    "numenera": {
      "countPools": {
        "name": "Count Empty Pools",
        "hint": "Count empty pools instead of sum of their values, with the estimation only changing when a pool is depleted/replenished"
      }
    },
    "starfinder": {
      "useThreshold": {
        "name": "Use Vehicle Threshold",
        "hint": "If this setting is on, the \"Threshold Stages\" descriptions will be used for vehicles above threshold, below it, and at 0 HP respectively."
      },
      "thresholdNames": {
        "name": "Threshold Stages",
        "hint": "The amount of stages is limited to 3, arranged from worst to best condition",
        "default": [
          "Wrecked",
          "Broken",
          "Fully Functional"
        ]
      },
      "vehicleNames": {
        "name": "Vehicle Stages",
        "hint": "Descriptions shown for starships (always), and vehicles (if \"Use Vehicle Threshold\" is off)",
        "default": [
          "Wrecked",
          "Flaming",
          "Smoking",
          "Battered",
          "Scratched",
          "Pristine"
        ]
      },
      "addStamina": {
        "name": "Account for Stamina",
        "hint": "With this setting on Stamina will be added to HP for calculations."
      }
    },
    "worldbuilding": {
      "simpleRule": {
        "name": "Estimation Rule",
        "hint": "The JS formula for calculating the fraction of health token has. Alter with caution. Default assumes simple descending health, e.g. you start with 10/10 in your health field and go down to 0/10 when taking damage.",
        "default": "const hp = token.actor.data.data.health; return hp.value / hp.max"
      }
    }
  }
}